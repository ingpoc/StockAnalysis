---
description: These rules apply specifically to the web scraping components of the Stock Analysis project.
globs: src/scraper/**/*.py
alwaysApply: false
---
# Stock Analysis Scraper Rules

## Description
These rules apply specifically to the web scraping components of the Stock Analysis project.

## Files
src/scraper/**/*.py

## Rules

You are an expert in web scraping with Python, specializing in financial data extraction. You understand the challenges of scraping dynamic websites, handling authentication, and processing financial data.

1. Examine All Related Files First
    Before making changes, review all related code files
    Understand existing patterns and dependencies
    Identify opportunities to reuse existing code
2. Prioritize Working Functionality
    Focus first on delivering working features that meet user requirements
    Ensure scraping operations complete successfully and return expected data
    Address immediate user needs before suggesting architectural improvements
3. Keep Code Simple
    Write straightforward, readable code with clear intent
    Avoid over-engineering or premature optimization
    Use descriptive variable and function names
4. Reuse Existing Code
    Leverage existing functions and modules when possible
    Extend current functionality rather than duplicating it
    Maintain consistent patterns across the codebase


Scraping Flow and Duplicate Prevention
   1. Initial Result Card Processing
        Extract the stock symbol and quarter information from each result card
        Before detailed extraction, check if this stock-quarter combination already exists in the database
        Only proceed with detailed extraction if the data doesn't already exist
    2. Database Check Process
        Query the database using the stock symbol and quarter as unique identifiers
        If a record with matching stock symbol and quarter exists, skip to the next result card
        If no matching record exists, proceed with full data extraction
    3. Complete Data Extraction Sequence
        For new stock-quarter combinations:
        Extract base metrics from the result card (company name, symbol, quarter, etc.)
        Open the stock details page
        Extract detailed financial metrics from the details page
        Combine base and detailed metrics into a complete record
        Save the complete record to the database
        After saving, move to the next result card
    4. Efficient Processing
        Always check database first to avoid unnecessary page navigation and extraction
        Process result cards sequentially to maintain consistent state
        Log skipped items for auditing purposes
    5. Validation
        To validate the data use mongosh command to login to mongo db
        stock_data is the db
        detailed_financials is the collection where market data is stored    

Sample format of stock stored in database. Data should be saved in similar format
          {
    "_id": "66c75c5dece53611a24cb101",
    "company_name": "Raymond",
    "symbol": "RAYMOND",
    "financial_metrics": [
      {
        "market_cap": "13,484",
        "face_value": "10",
        "book_value": "365.96",
        "dividend_yield": "0.49",
        "ttm_eps": "1,192.79",
        "ttm_pe": "1.70",
        "pb_ratio": "5.53",
        "sector_pe": "22.24",
        "piotroski_score": "6",
        "revenue_growth_3yr_cagr": "36.5%",
        "net_profit_growth_3yr_cagr": "%",
        "operating_profit_growth_3yr_cagr": "%",
        "strengths": "Strengths (12)",
        "weaknesses": "Weaknesses (1)",
        "technicals_trend": "NEUTRAL",
        "fundamental_insights": "Strong Performer",
        "fundamental_insights_description": "Stock with good financial performance alongside good to expensive valuation, but lacks price momentum as suggested by technical indicators",
        "revenue": "938",
        "gross_profit": "62",
        "net_profit": "7,380",
        "net_profit_growth": "9,610%",
        "result_date": "August 06, 2024",
        "gross_profit_growth": "-54%",
        "revenue_growth": "-47%",
        "quarter": "Q1 FY24-25",
        "report_type": "Consolidated",
        "cmp": "2,025.45 (7.25%)"
      },
      {
        "cmp": "1,639.15 (-2.85%)",
        "revenue": "1,045",
        "gross_profit": "76",
        "net_profit": "73",
        "net_profit_growth": "-52%",
        "gross_profit_growth": "-69%",
        "revenue_growth": "-53%",
        "quarter": "Q2 FY24-25",
        "result_date": "November 04, 2024",
        "report_type": "Consolidated",
        "market_cap": "10,912",
        "face_value": "10",
        "book_value": "693.57",
        "dividend_yield": "0.61",
        "ttm_eps": "1,192.79",
        "ttm_pe": "1.37",
        "pb_ratio": "2.37",
        "sector_pe": "19.87",
        "piotroski_score": "6",
        "revenue_growth_3yr_cagr": "36.5%",
        "net_profit_growth_3yr_cagr": "%",
        "operating_profit_growth_3yr_cagr": "%",
        "strengths": "Strengths (11)",
        "weaknesses": "Weaknesses (5)",
        "technicals_trend": "BEARISH",
        "fundamental_insights": "Mid-range performer",
        "fundamental_insights_description": "Stock with medium financial performance with average price momentum and valuation. These stocks may be affordable and are showing some investors interest."
      }
    ],
    "timestamp": "2024-08-22 15:42:21.524000"
  },



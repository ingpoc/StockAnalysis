---
description: Guidelines to how rules should be created or optimized
globs: .cursor/rules/*.mdc
alwaysApply: false
---
---
description: Guidelines for creating and optimizing rules
globs: .cursor/rules/*.mdc
alwaysApply: false
---

# Rule Creation Guidelines

## Rule Structure
All rules should follow this consistent structure:

1. **Header**
   ```
   ---
   description: Brief description of the rule's purpose
   globs: path/to/relevant/files/*.extension
   alwaysApply: false
   ---
   ```

2. **Title**
   ```
   # Rule Name
   ```

3. **Purpose**
   A 1-2 sentence explanation of what the rule is for and why it matters.

4. **Key Principles**
   3-5 bullet points of the most important guidelines to follow.

5. **References** (Optional)
   Links to more detailed documentation or examples.

6. **Examples**
   1-2 simple examples that demonstrate the rule in practice.

## Rule Best Practices

- ✓ Keep rules concise and focused on a single concern
- ✓ Use clear, actionable language
- ✓ Include checkmarks (✓) for list items to improve readability
- ✓ Avoid excessive code examples and details
- ✓ Cross-reference other rules instead of duplicating content
- ✓ Update rules when project requirements change

## Example Rule Format

```markdown
---
description: Database Validation Guidelines
globs: src/**/*.py
alwaysApply: false
---

# Database Validation Guidelines

## Purpose
This rule provides guidance on how to validate database operations and ensure data integrity in the StockAnalysis application.

## Key Principles
- ✓ Use MongoDB shell (mongosh) for direct database validation
- ✓ Validate all required fields exist with correct data types
- ✓ Verify relationships between collections are maintained
- ✓ Check for duplicate entries and data consistency
- ✓ Prefer API endpoint testing over creating test files

## References
- See `tools/scripts/validate_database.py` for automated validation
- Refer to MongoDB documentation: https://docs.mongodb.com/manual/

## Examples
```javascript
// Example: Validate stock data in MongoDB shell
use stock_data
db.detailed_financials.find({symbol: "RANASUG"})
```
```

This structure ensures that all rules are consistent, concise, and easy to follow.
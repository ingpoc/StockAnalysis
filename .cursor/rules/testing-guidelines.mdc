---
description: Testing Guidelines
globs: tests/*.py
alwaysApply: false
---
 ---
description: Testing Guidelines
globs: tests/*.py
alwaysApply: false
---

# Testing Guidelines

## 1. Test Organization
- ✓ All test files must be placed in the `tests/` directory
- ✓ Test files should be named with a `test_` prefix (e.g., `test_api.py`)
- ✓ Debug utilities should be placed in the `tests/` directory
- ✓ Test files should be organized by component or functionality
- ✓ Each test file should focus on a specific component or functionality

## 2. Test File Structure
```python
"""
Test module for [component].
"""
import pytest
from src.component import Component

def test_specific_functionality():
    """Test that [specific functionality] works as expected."""
    # Arrange
    component = Component()
    
    # Act
    result = component.method()
    
    # Assert
    assert result == expected_result
```

## 3. Test Coverage Requirements
- ✓ Unit tests for all services (85% coverage)
- ✓ API endpoint tests (90% coverage)
- ✓ Utilities tests (80% coverage)
- ✓ Mock external dependencies
- ✓ Test error handling scenarios
- ✓ Test edge cases

## 4. Testing Best Practices
- ✓ Use descriptive test names
- ✓ Follow the Arrange-Act-Assert pattern
- ✓ Keep tests independent
- ✓ Avoid test interdependencies
- ✓ Use appropriate assertions
- ✓ Mock external dependencies
- ✓ Use fixtures for common setup
- ✓ Clean up after tests

## 5. API Testing
- ✓ Test all API endpoints
- ✓ Test success and error cases
- ✓ Verify response status codes
- ✓ Verify response body structure
- ✓ Test with various input parameters
- ✓ Test authentication and authorization

## 6. Database Testing
- ✓ Use a test database
- ✓ Reset the database before each test
- ✓ Test CRUD operations
- ✓ Test queries and filters
- ✓ Test transactions
- ✓ Test error handling

## 7. Scraper Testing
- ✓ Mock external websites
- ✓ Test with sample HTML
- ✓ Test parsing logic
- ✓ Test error handling
- ✓ Test rate limiting
- ✓ Test authentication

## 8. Debug Utilities
- ✓ Debug utilities should be placed in the `tests/` directory
- ✓ Debug utilities should be named with a `debug_` prefix
- ✓ Debug utilities should have clear documentation
- ✓ Debug utilities should log relevant information
- ✓ Debug utilities should not be included in regular test runs

These guidelines ensure consistent and effective testing across the application.